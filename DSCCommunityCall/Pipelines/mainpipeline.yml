# specific path build
trigger:
  paths:
    include:
      - PowerShellUserGroup-2021-07-08/Terraform/*
      - PowerShellUserGroup-2021-07-08/Pipelines/mainpipeline.yml

stages:
  - stage: Build
    jobs:
      - job: Build

        pool:
          vmImage: "ubuntu-latest"

        steps:
          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: "$(Build.SourcesDirectory)/PowerShellUserGroup-2021-07-08/Terraform/global"
              ArtifactName: "global"
              publishLocation: "Container"
            displayName: "Create Artifact for the global folder"

          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: "$(Build.SourcesDirectory)/PowerShellUserGroup-2021-07-08/Terraform/services"
              ArtifactName: "psug"
              publishLocation: "Container"
            displayName: "Create Artifact for all psug services"

  - stage: AzureAutomationAccount
    dependsOn: Build
    condition: succeeded()

    jobs:
      - job: Deploy
        variables:
          - template: variables/prod/prod_vars.yml

        pool:
          vmImage: "ubuntu-latest"

        steps:
          - task: DownloadBuildArtifacts@0
            inputs:
              buildType: "current"
              downloadType: "single"
              artifactName: "global"
              downloadPath: "$(System.DefaultWorkingDirectory)"
            displayName: "Download Azure global artifact"

          - task: DownloadBuildArtifacts@0
            inputs:
              buildType: "current"
              downloadType: "single"
              artifactName: "psug"
              downloadPath: "$(System.DefaultWorkingDirectory)"
            displayName: "Download psug artifact"

          - template: templates/terraform.yml
            parameters:
              terraformVersion: "${{variables.terraformVersion}}"
              serviceConnectionName: "${{variables.serviceConnectionName}}"
              backendAzureRmResourceGroupName: "${{variables.backendAzureRmResourceGroupName}}"
              backendAzureRmStorageAccountName: "${{variables.backendAzureRmStorageAccountName}}"
              backendAzureRmContainerName: "psug-aadsc"
              backendAzureRmKey: "psug.tfstate"
              workingDirectory: "$(System.DefaultWorkingDirectory)/psug/automationaccount"
              description: "PSUG automation account"
              planparameters: "-var automation_account_name=${{variables.automationAccountName}} -var rg_name=${{variables.automationAccountRGName}}"

  - stage: VNET
    dependsOn: Build
    condition: succeeded()

    jobs:
      - job: Deploy
        variables:
          - template: variables/prod/prod_vars.yml

        pool:
          vmImage: "ubuntu-latest"

        steps:
          - task: DownloadBuildArtifacts@0
            inputs:
              buildType: "current"
              downloadType: "single"
              artifactName: "global"
              downloadPath: "$(System.DefaultWorkingDirectory)"
            displayName: "Download Azure global artifact"

          - task: DownloadBuildArtifacts@0
            inputs:
              buildType: "current"
              downloadType: "single"
              artifactName: "psug"
              downloadPath: "$(System.DefaultWorkingDirectory)"
            displayName: "Download psug artifact"

          - template: templates/terraform.yml
            parameters:
              terraformVersion: "${{variables.terraformVersion}}"
              serviceConnectionName: "${{variables.serviceConnectionName}}"
              backendAzureRmResourceGroupName: "${{variables.backendAzureRmResourceGroupName}}"
              backendAzureRmStorageAccountName: "${{variables.backendAzureRmStorageAccountName}}"
              backendAzureRmContainerName: "psug-vnet"
              backendAzureRmKey: "psug.tfstate"
              workingDirectory: "$(System.DefaultWorkingDirectory)/psug/vnet"
              description: "PSUG VNET account"
              planparameters: "-var rg_name=${{variables.VNetRGName}}"

  - stage: NSG
    dependsOn: Build
    condition: succeeded()

    jobs:
      - job: Deploy
        variables:
          - template: variables/prod/prod_vars.yml

        pool:
          vmImage: "ubuntu-latest"

        steps:
          - task: DownloadBuildArtifacts@0
            inputs:
              buildType: "current"
              downloadType: "single"
              artifactName: "global"
              downloadPath: "$(System.DefaultWorkingDirectory)"
            displayName: "Download Azure global artifact"

          - task: DownloadBuildArtifacts@0
            inputs:
              buildType: "current"
              downloadType: "single"
              artifactName: "psug"
              downloadPath: "$(System.DefaultWorkingDirectory)"
            displayName: "Download psug artifact"

          - template: templates/terraform.yml
            parameters:
              terraformVersion: "${{variables.terraformVersion}}"
              serviceConnectionName: "${{variables.serviceConnectionName}}"
              backendAzureRmResourceGroupName: "${{variables.backendAzureRmResourceGroupName}}"
              backendAzureRmStorageAccountName: "${{variables.backendAzureRmStorageAccountName}}"
              backendAzureRmContainerName: "psug-nsg"
              backendAzureRmKey: "psugnsg.tfstate"
              workingDirectory: "$(System.DefaultWorkingDirectory)/psug/networksecuritygroup"
              description: "PSUG DC"
              planparameters: "-var rg_name=${{variables.NSGRGName}} -var subnet_rg=${{variables.VNetRGName}}"

  - stage: StorageAccounts
    dependsOn: Build
    condition: succeeded()

    jobs:
      - job: Deploy
        variables:
          - template: variables/prod/prod_vars.yml

        pool:
          vmImage: "ubuntu-latest"

        steps:
          - task: DownloadBuildArtifacts@0
            inputs:
              buildType: "current"
              downloadType: "single"
              artifactName: "global"
              downloadPath: "$(System.DefaultWorkingDirectory)"
            displayName: "Download Azure global artifact"

          - task: DownloadBuildArtifacts@0
            inputs:
              buildType: "current"
              downloadType: "single"
              artifactName: "psug"
              downloadPath: "$(System.DefaultWorkingDirectory)"
            displayName: "Download psug artifact"

          - template: templates/terraform.yml
            parameters:
              terraformVersion: "${{variables.terraformVersion}}"
              serviceConnectionName: "${{variables.serviceConnectionName}}"
              backendAzureRmResourceGroupName: "${{variables.backendAzureRmResourceGroupName}}"
              backendAzureRmStorageAccountName: "${{variables.backendAzureRmStorageAccountName}}"
              backendAzureRmContainerName: "psug-sa"
              backendAzureRmKey: "psugdscsa.tfstate"
              workingDirectory: "$(System.DefaultWorkingDirectory)/psug/storageaccount/dscstrorage"
              description: "PSUG SA"
              planparameters: "-var rg_name=${{variables.DSCSARGName}} -var storage_account_name=${{variables.DSCSAName}}"

  - stage: AAVMS
    dependsOn: Build
    condition: succeeded()

    jobs:
      - job: Deploy
        variables:
          - template: variables/prod/prod_vars.yml

        pool:
          vmImage: "ubuntu-latest"

        steps:
          - task: DownloadBuildArtifacts@0
            inputs:
              buildType: "current"
              downloadType: "single"
              artifactName: "global"
              downloadPath: "$(System.DefaultWorkingDirectory)"
            displayName: "Download Azure global artifact"

          - task: DownloadBuildArtifacts@0
            inputs:
              buildType: "current"
              downloadType: "single"
              artifactName: "psug"
              downloadPath: "$(System.DefaultWorkingDirectory)"
            displayName: "Download psug artifact"

          - template: templates/terraform.yml
            parameters:
              terraformVersion: "${{variables.terraformVersion}}"
              serviceConnectionName: "${{variables.serviceConnectionName}}"
              backendAzureRmResourceGroupName: "${{variables.backendAzureRmResourceGroupName}}"
              backendAzureRmStorageAccountName: "${{variables.backendAzureRmStorageAccountName}}"
              backendAzureRmContainerName: "psug-vms"
              backendAzureRmKey: "psugdc.tfstate"
              workingDirectory: "$(System.DefaultWorkingDirectory)/psug/virtualmachines/DC"
              description: "PSUG DC"
              planparameters: "-var rg_name=${{variables.VMRGName}} -var subnet_rg=${{variables.VNetRGName}} -var aadsc_rg=${{variables.automationAccountRGName}} -var aadsc_name=${{variables.automationAccountName}}"
