---
parameters:
  - name: serviceConnectionName
    type: string
  - name: backendAzureRmResourceGroupName
    type: string
  - name: backendAzureRmStorageAccountName
    type: string
  - name: backendAzureRmContainerName
    type: string
  - name: backendAzureRmKey
    type: string
  - name: workingDirectory
    type: string
  - name: terraformVersion
    type: string
  - name: description
    type: string


steps:
  - task: TerraformInstaller@0
    displayName: 'Install Terraform v${{ parameters.terraformVersion }}'
    inputs:
      terraformVersion: '${{ parameters.terraformVersion }}'

  - task: TerraformTaskV2@2
    displayName: 'Terraform Init for ${{ parameters.description }}'
    inputs:
      provider: 'azurerm'
      command: 'init'
      workingDirectory: '${{ parameters.workingDirectory }}'
      backendServiceArm: '${{ parameters.serviceConnectionName}}'
      backendAzureRmResourceGroupName: '${{ parameters.backendAzureRmResourceGroupName }}'
      backendAzureRmStorageAccountName: '${{ parameters.backendAzureRmStorageAccountName }}'
      backendAzureRmContainerName: '${{ parameters.backendAzureRmContainerName }}'
      backendAzureRmKey: '${{ parameters.backendAzureRmKey }}'

  - task: TerraformTaskV2@2
    displayName: "Terraform Validate for ${{ parameters.description }}"
    inputs:
      provider: "azurerm"
      command: "validate"
      workingDirectory: "${{ parameters.workingDirectory }}"

  - task: TerraformTaskV2@2
    displayName: 'Run Terraform Plan for ${{ parameters.description }}'
    inputs:
      provider: 'azurerm'
      command: 'plan'
      commandOptions: '-out=${BUILD_BUILDNUMBER}.tfplan'
      workingDirectory: '${{ parameters.workingDirectory }}'
      environmentServiceNameAzureRM: '${{ parameters.serviceConnectionName }}'

  - task: TerraformTaskV2@2
    displayName: 'Terraform Apply for ${{ parameters.description }}'
    inputs:
      provider: 'azurerm'
      command: 'apply'
      commandOptions: '${BUILD_BUILDNUMBER}.tfplan' # pass plan file to terraform apply
      workingDirectory: '${{ parameters.workingDirectory }}'
      environmentServiceNameAzureRM: '${{ parameters.serviceConnectionName }}'